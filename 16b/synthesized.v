/* Generated by Yosys 0.54+23 (git sha1 513f0f16d, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

(* top =  1  *)
(* src = "sub_16bit_signed.v:1.1-13.10" *)
module sub_16bit_signed(A, B, result, overflow);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  (* src = "sub_16bit_signed.v:2.26-2.27" *)
  input [15:0] A;
  wire [15:0] A;
  (* src = "sub_16bit_signed.v:3.26-3.27" *)
  input [15:0] B;
  wire [15:0] B;
  (* src = "sub_16bit_signed.v:7.24-7.29" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" *)
  wire [15:0] B_neg;
  (* src = "sub_16bit_signed.v:8.24-8.28" *)
  wire [15:0] diff;
  (* src = "sub_16bit_signed.v:5.26-5.34" *)
  output overflow;
  wire overflow;
  (* src = "sub_16bit_signed.v:4.26-4.32" *)
  output [15:0] result;
  wire [15:0] result;
  assign _078_ = ~(B[13] | B[12]);
  assign _079_ = ~(B[11] | B[10]);
  assign _080_ = B[9] | B[8];
  assign _081_ = _079_ & ~(_080_);
  assign _082_ = B[7] | B[6];
  assign _083_ = B[5] | B[4];
  assign _084_ = _083_ | _082_;
  assign _085_ = ~(B[3] | B[2]);
  assign _086_ = ~(B[1] | B[0]);
  assign _087_ = ~(_086_ & _085_);
  assign _088_ = _087_ | _084_;
  assign _089_ = _088_ | ~(_081_);
  assign _090_ = _078_ & ~(_089_);
  assign _091_ = _090_ & ~(B[14]);
  assign _092_ = _091_ ^ B[15];
  assign _093_ = _092_ ^ A[15];
  assign _094_ = _090_ ^ B[14];
  assign _095_ = A[14] & ~(_094_);
  assign _096_ = _094_ ^ A[14];
  assign _097_ = ~A[13];
  assign _098_ = ~(_089_ | B[12]);
  assign _099_ = _098_ ^ B[13];
  assign _100_ = _099_ | _097_;
  assign _101_ = _099_ ^ _097_;
  assign _102_ = ~(_089_ ^ B[12]);
  assign _103_ = _102_ | ~(A[12]);
  assign _104_ = _101_ & ~(_103_);
  assign _105_ = _100_ & ~(_104_);
  assign _106_ = _102_ ^ A[12];
  assign _107_ = _101_ & ~(_106_);
  assign _108_ = ~A[11];
  assign _109_ = ~(_088_ | _080_);
  assign _110_ = _109_ & ~(B[10]);
  assign _111_ = _110_ ^ B[11];
  assign _112_ = _111_ | _108_;
  assign _113_ = _111_ ^ _108_;
  assign _114_ = _109_ ^ B[10];
  assign _115_ = _114_ | ~(A[10]);
  assign _116_ = _113_ & ~(_115_);
  assign _117_ = _112_ & ~(_116_);
  assign _118_ = _114_ ^ A[10];
  assign _119_ = _113_ & ~(_118_);
  assign _120_ = ~A[9];
  assign _121_ = ~B[8];
  assign _122_ = _121_ & ~(_088_);
  assign _123_ = _122_ ^ B[9];
  assign _124_ = _123_ | _120_;
  assign _125_ = _123_ ^ _120_;
  assign _126_ = _088_ ^ _121_;
  assign _127_ = _126_ | ~(A[8]);
  assign _000_ = _125_ & ~(_127_);
  assign _001_ = _124_ & ~(_000_);
  assign _002_ = _119_ & ~(_001_);
  assign _003_ = _117_ & ~(_002_);
  assign _004_ = _126_ ^ A[8];
  assign _005_ = _004_ | ~(_125_);
  assign _006_ = _119_ & ~(_005_);
  assign _007_ = ~A[7];
  assign _008_ = ~(_087_ | _083_);
  assign _009_ = _008_ & ~(B[6]);
  assign _010_ = _009_ ^ B[7];
  assign _011_ = _010_ | _007_;
  assign _012_ = _010_ ^ _007_;
  assign _013_ = _008_ ^ B[6];
  assign _014_ = _013_ | ~(A[6]);
  assign _015_ = _012_ & ~(_014_);
  assign _016_ = _011_ & ~(_015_);
  assign _017_ = _013_ ^ A[6];
  assign _018_ = _012_ & ~(_017_);
  assign _019_ = _086_ & _085_;
  assign _020_ = _019_ & ~(B[4]);
  assign _021_ = _020_ ^ B[5];
  assign _022_ = A[5] & ~(_021_);
  assign _023_ = _021_ ^ A[5];
  assign _024_ = _019_ ^ B[4];
  assign _025_ = _024_ | ~(A[4]);
  assign _026_ = _025_ | _023_;
  assign _027_ = _026_ & ~(_022_);
  assign _028_ = _018_ & ~(_027_);
  assign _029_ = _016_ & ~(_028_);
  assign _030_ = _024_ ^ A[4];
  assign _031_ = _030_ | _023_;
  assign _032_ = _018_ & ~(_031_);
  assign _033_ = ~A[3];
  assign _034_ = _086_ & ~(B[2]);
  assign _035_ = _034_ ^ B[3];
  assign _036_ = _035_ | _033_;
  assign _037_ = _035_ ^ _033_;
  assign _038_ = _086_ ^ B[2];
  assign _039_ = _038_ | ~(A[2]);
  assign _040_ = _037_ & ~(_039_);
  assign _041_ = _036_ & ~(_040_);
  assign _042_ = _038_ ^ A[2];
  assign _043_ = _037_ & ~(_042_);
  assign _044_ = ~A[1];
  assign _045_ = ~(B[1] ^ B[0]);
  assign _046_ = _045_ | _044_;
  assign _047_ = _045_ ^ _044_;
  assign _048_ = ~(A[0] & B[0]);
  assign _049_ = _047_ & ~(_048_);
  assign _050_ = _046_ & ~(_049_);
  assign _051_ = _043_ & ~(_050_);
  assign _052_ = _041_ & ~(_051_);
  assign _053_ = _032_ & ~(_052_);
  assign _054_ = _029_ & ~(_053_);
  assign _055_ = _006_ & ~(_054_);
  assign _056_ = _003_ & ~(_055_);
  assign _057_ = _107_ & ~(_056_);
  assign _058_ = _105_ & ~(_057_);
  assign _059_ = _058_ | _096_;
  assign _060_ = _059_ & ~(_095_);
  assign result[15] = _060_ ^ _093_;
  assign _061_ = ~(result[15] ^ A[15]);
  assign overflow = _093_ & ~(_061_);
  assign result[1] = ~(_048_ ^ _047_);
  assign result[2] = _050_ ^ _042_;
  assign _062_ = ~(_050_ | _042_);
  assign _063_ = _062_ | ~(_039_);
  assign result[3] = _063_ ^ _037_;
  assign result[4] = _052_ ^ _030_;
  assign _064_ = ~(_052_ | _030_);
  assign _065_ = _025_ & ~(_064_);
  assign result[5] = _065_ ^ _023_;
  assign _066_ = ~(_052_ | _031_);
  assign _067_ = _027_ & ~(_066_);
  assign result[6] = _067_ ^ _017_;
  assign _068_ = ~(_067_ | _017_);
  assign _069_ = _068_ | ~(_014_);
  assign result[7] = _069_ ^ _012_;
  assign result[8] = _054_ ^ _004_;
  assign _070_ = ~(_054_ | _004_);
  assign _071_ = _070_ | ~(_127_);
  assign result[9] = _071_ ^ _125_;
  assign _072_ = ~(_054_ | _005_);
  assign _073_ = _001_ & ~(_072_);
  assign result[10] = _073_ ^ _118_;
  assign _074_ = ~(_073_ | _118_);
  assign _075_ = _074_ | ~(_115_);
  assign result[11] = _075_ ^ _113_;
  assign result[12] = _056_ ^ _106_;
  assign _076_ = ~(_056_ | _106_);
  assign _077_ = _076_ | ~(_103_);
  assign result[13] = _077_ ^ _101_;
  assign result[14] = _058_ ^ _096_;
  assign result[0] = A[0] ^ B[0];
  assign B_neg[0] = B[0];
  assign diff = result;
endmodule
