Please act as a professional Verilog designer.

Implement a module that multiplies two 8-bit signed (two’s-complement) inputs and produces a 16-bit signed (two’s-complement) product. The design is purely combinational.

Module name:
mult_signed_8bit

Input ports:
- a [7:0]: 8-bit signed operand A (two’s-complement).
- b [7:0]: 8-bit signed operand B (two’s-complement).

Output ports:
- product [15:0]: 16-bit signed product of A and B (two’s-complement).

Internal logic:
1. Signed interpretation: Treat a and b as signed two’s-complement values.
2. Multiplication: Compute product as the signed multiplication of a and b in combinational logic.
3. Width/precision: The 16-bit output width is sufficient to represent the exact product of any two 8-bit signed inputs; no saturation or rounding is performed.
4. Combinational behavior: No clock or reset; the output updates immediately with changes on a or b.

Generate correct synthesizable RTL Verilog code
