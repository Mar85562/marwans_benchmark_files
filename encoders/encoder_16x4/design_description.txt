Please act as a professional Verilog designer.

Implement a combinational logic module that performs the function of a 16-to-4 encoder. The encoder accepts 16 input lines, where only one input is asserted high (1) at a time, and outputs a 4-bit binary code that corresponds to the index of the high input.

Module name:
  encoder_16x4

Input ports:
  in[15:0]: 16-bit input vector, where only one bit is high at a time.

Output ports:
  out[3:0]: 4-bit binary output indicating the index of the asserted input line.

Implementation:
This encoder maps each single high bit in in[15:0] to its corresponding binary-encoded index in out[3:0]. 
Each bit position corresponds to a 4-bit output that converts the bit position to a 4-bit representation of that position. 
For example : If in = 16'b00000000000000010 , in this case the 1st bit is high, thus the output should represent the number 1 in 4-bits. 
In any case where more than one bit is at a high, or all are low, this would result in an invalid output.

The output reflects the position of the single high bit. For any invalid input, the encoder will output: 4'bxxxx.

Please give me the complete code.