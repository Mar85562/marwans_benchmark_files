Please act as a professional Verilog designer.

Implement a simple 1-bit register that stores and updates a single-bit value using a synchronous active-high reset and a rising-edge clock. This primitive is commonly used in control paths, FSM state bits, and pipeline staging.

Module name:
register_1bit

Input ports:
- clk: Clock signal used to synchronize data storage (rising-edge triggered).
- rst: Synchronous active-high reset; forces the register to a known state (0) on the next rising edge of clk.
- d: Data input bit to be captured.

Output ports:
- q: Output bit representing the current stored value.

Internal logic:
1. Edge-Triggered Storage: On each rising edge of clk, if rst is 1, q is loaded with 1'b0; otherwise, q is loaded with d.
2. Pure Sequential Behavior: No combinational paths from d to q outside the clocked process; no latches or asynchronous resets.

Reset Behavior:
Synchronous active-high reset. At power-up, q is undefined; system logic must assert rst to initialize q to 0.

Generate correct synthesizable RTL Verilog code
