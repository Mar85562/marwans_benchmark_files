Please act as a professional Verilog designer.

Implement a module that subtracts two 16-bit unsigned inputs and produces a 16-bit unsigned result with a borrow-out flag. The design is purely combinational.

Module name:
sub_16bit_unsigned

Input ports:
- a [15:0]: First 16-bit unsigned input (the number to subtract from).
- b [15:0]: Second 16-bit unsigned input (the number to subtract).

Output ports:
- result [15:0]: 16-bit unsigned difference a − b.
- borrow: 1-bit flag indicating an unsigned borrow (underflow).

Internal logic:
1. Unsigned subtraction: Compute result as a − b in combinational logic.
2. Borrow detection: Set borrow = 1 when a < b; otherwise borrow = 0.
3. Combinational behavior: No clock or reset; outputs update immediately. Result uses natural modulo-2^16 wrap-around on underflow.

Generate correct synthesizable RTL Verilog code